%!PS-Adobe-2.0 EPSF-2.0
%%Title: dwie_szczeliny.tex
%%Creator: gnuplot 4.6 patchlevel 6
%%CreationDate: Tue Apr 28 17:07:14 2015
%%DocumentFonts: 
%%BoundingBox: 50 50 616 276
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -73 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 616 50 lineto 616 276 lineto 50 276 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.6 (September 2012)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (dwie_szczeliny.tex)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.6 patchlevel 6)
  /Author (zuziakaxel)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Tue Apr 28 17:07:14 2015)
  /DOCINFO pdfmark
end
} ifelse
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
2.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTa
LCa setrgbcolor
814 704 M
10127 0 V
stroke
2.000 UL
LTb
LCb setrgbcolor
814 704 M
63 0 V
10064 0 R
-63 0 V
stroke
LTb
1.000 UL
LTa
LCa setrgbcolor
814 1298 M
10127 0 V
stroke
2.000 UL
LTb
LCb setrgbcolor
814 1298 M
63 0 V
10064 0 R
-63 0 V
stroke
LTb
1.000 UL
LTa
LCa setrgbcolor
814 1892 M
10127 0 V
stroke
2.000 UL
LTb
LCb setrgbcolor
814 1892 M
63 0 V
10064 0 R
-63 0 V
stroke
LTb
1.000 UL
LTa
LCa setrgbcolor
814 2487 M
10127 0 V
stroke
2.000 UL
LTb
LCb setrgbcolor
814 2487 M
63 0 V
10064 0 R
-63 0 V
stroke
LTb
1.000 UL
LTa
LCa setrgbcolor
814 3081 M
10127 0 V
stroke
2.000 UL
LTb
LCb setrgbcolor
814 3081 M
63 0 V
10064 0 R
-63 0 V
stroke
LTb
1.000 UL
LTa
LCa setrgbcolor
814 3675 M
10127 0 V
stroke
2.000 UL
LTb
LCb setrgbcolor
814 3675 M
63 0 V
10064 0 R
-63 0 V
stroke
LTb
1.000 UL
LTa
LCa setrgbcolor
814 4269 M
10127 0 V
stroke
2.000 UL
LTb
LCb setrgbcolor
814 4269 M
63 0 V
10064 0 R
-63 0 V
stroke
LTb
1.000 UL
LTa
LCa setrgbcolor
814 704 M
0 3565 V
stroke
2.000 UL
LTb
LCb setrgbcolor
814 704 M
0 63 V
0 3502 R
0 -63 V
stroke
LTb
1.000 UL
LTa
LCa setrgbcolor
2080 704 M
0 3565 V
stroke
2.000 UL
LTb
LCb setrgbcolor
2080 704 M
0 63 V
0 3502 R
0 -63 V
stroke
LTb
1.000 UL
LTa
LCa setrgbcolor
3346 704 M
0 3565 V
stroke
2.000 UL
LTb
LCb setrgbcolor
3346 704 M
0 63 V
0 3502 R
0 -63 V
stroke
LTb
1.000 UL
LTa
LCa setrgbcolor
4612 704 M
0 3565 V
stroke
2.000 UL
LTb
LCb setrgbcolor
4612 704 M
0 63 V
0 3502 R
0 -63 V
stroke
LTb
1.000 UL
LTa
LCa setrgbcolor
5878 704 M
0 3565 V
stroke
2.000 UL
LTb
LCb setrgbcolor
5878 704 M
0 63 V
0 3502 R
0 -63 V
stroke
LTb
1.000 UL
LTa
LCa setrgbcolor
7143 704 M
0 3565 V
stroke
2.000 UL
LTb
LCb setrgbcolor
7143 704 M
0 63 V
0 3502 R
0 -63 V
stroke
LTb
1.000 UL
LTa
LCa setrgbcolor
8409 704 M
0 3565 V
stroke
2.000 UL
LTb
LCb setrgbcolor
8409 704 M
0 63 V
0 3502 R
0 -63 V
stroke
LTb
1.000 UL
LTa
LCa setrgbcolor
9675 704 M
0 3565 V
stroke
2.000 UL
LTb
LCb setrgbcolor
9675 704 M
0 63 V
0 3502 R
0 -63 V
stroke
LTb
1.000 UL
LTa
LCa setrgbcolor
10941 704 M
0 3565 V
stroke
2.000 UL
LTb
LCb setrgbcolor
10941 704 M
0 63 V
0 3502 R
0 -63 V
stroke
LTb
2.000 UL
LTb
814 4269 N
814 704 L
10127 0 V
0 3565 V
814 4269 L
Z stroke
1.000 UP
2.000 UL
LTb
1.000 UP
5.000 UL
LT0
LC0 setrgbcolor
0.11 0.39 0.65 C 1067 710 M
63 0 V
64 -1 V
63 1 V
63 1 V
64 0 V
63 1 V
63 0 V
64 0 V
63 -2 V
63 -1 V
63 0 V
64 2 V
63 7 V
63 9 V
64 11 V
63 19 V
63 25 V
63 23 V
64 17 V
63 7 V
63 -6 V
64 -14 V
63 -24 V
63 -22 V
64 -17 V
63 -12 V
63 -7 V
63 0 V
64 7 V
63 13 V
63 13 V
64 9 V
63 4 V
63 -2 V
63 -5 V
64 -10 V
63 -7 V
63 -7 V
64 -4 V
63 -1 V
63 3 V
64 7 V
63 8 V
63 20 V
63 23 V
64 32 V
63 32 V
63 21 V
64 11 V
63 -6 V
63 -22 V
63 -28 V
64 -15 V
63 27 V
63 51 V
64 127 V
63 204 V
63 263 V
64 303 V
63 300 V
63 223 V
63 82 V
64 -45 V
63 -246 V
63 -136 V
64 -207 V
63 -315 V
63 -213 V
63 -59 V
64 159 V
63 371 V
63 454 V
64 572 V
63 643 V
63 255 V
64 172 V
0 -43 V
63 -337 V
63 -423 V
63 -540 V
64 -560 V
63 -393 V
63 -235 V
64 -133 V
63 59 V
63 152 V
63 205 V
64 304 V
63 215 V
63 81 V
64 -56 V
63 -104 V
63 -128 V
63 -247 V
64 -270 V
63 -178 V
63 -115 V
64 -132 V
63 -44 V
63 -6 V
64 7 V
63 7 V
63 3 V
63 -12 V
stroke 7586 885 M
64 -24 V
63 -17 V
63 -19 V
64 -26 V
63 -12 V
63 -2 V
63 6 V
64 9 V
63 12 V
63 14 V
64 8 V
63 3 V
63 -2 V
64 -18 V
63 -27 V
63 -27 V
63 -22 V
64 -10 V
63 -8 V
63 -1 V
64 11 V
63 14 V
63 10 V
63 21 V
64 14 V
63 4 V
63 -4 V
64 -10 V
63 -9 V
63 -23 V
64 -16 V
63 -10 V
63 -5 V
63 -5 V
64 -3 V
63 0 V
63 1 V
64 2 V
63 0 V
63 -3 V
63 0 V
64 -1 V
63 0 V
63 -1 V
64 -1 V
63 0 V
63 0 V
64 2 V
1067 710 Pls
1130 710 Pls
1194 709 Pls
1257 710 Pls
1320 711 Pls
1384 711 Pls
1447 712 Pls
1510 712 Pls
1574 712 Pls
1637 710 Pls
1700 709 Pls
1763 709 Pls
1827 711 Pls
1890 718 Pls
1953 727 Pls
2017 738 Pls
2080 757 Pls
2143 782 Pls
2206 805 Pls
2270 822 Pls
2333 829 Pls
2396 823 Pls
2460 809 Pls
2523 785 Pls
2586 763 Pls
2650 746 Pls
2713 734 Pls
2776 727 Pls
2839 727 Pls
2903 734 Pls
2966 747 Pls
3029 760 Pls
3093 769 Pls
3156 773 Pls
3219 771 Pls
3282 766 Pls
3346 756 Pls
3409 749 Pls
3472 742 Pls
3536 738 Pls
3599 737 Pls
3662 740 Pls
3726 747 Pls
3789 755 Pls
3852 775 Pls
3915 798 Pls
3979 830 Pls
4042 862 Pls
4105 883 Pls
4169 894 Pls
4232 888 Pls
4295 866 Pls
4358 838 Pls
4422 823 Pls
4485 850 Pls
4548 901 Pls
4612 1028 Pls
4675 1232 Pls
4738 1495 Pls
4802 1798 Pls
4865 2098 Pls
4928 2321 Pls
4991 2403 Pls
5055 2358 Pls
5118 2112 Pls
5181 1976 Pls
5245 1769 Pls
5308 1454 Pls
5371 1241 Pls
5434 1182 Pls
5498 1341 Pls
5561 1712 Pls
5624 2166 Pls
5688 2738 Pls
5751 3381 Pls
5814 3636 Pls
5878 3808 Pls
5878 3765 Pls
5941 3428 Pls
6004 3005 Pls
6067 2465 Pls
6131 1905 Pls
6194 1512 Pls
6257 1277 Pls
6321 1144 Pls
6384 1203 Pls
6447 1355 Pls
6510 1560 Pls
6574 1864 Pls
6637 2079 Pls
6700 2160 Pls
6764 2104 Pls
6827 2000 Pls
6890 1872 Pls
6953 1625 Pls
7017 1355 Pls
7080 1177 Pls
7143 1062 Pls
7207 930 Pls
7270 886 Pls
7333 880 Pls
7397 887 Pls
7460 894 Pls
7523 897 Pls
7586 885 Pls
7650 861 Pls
7713 844 Pls
7776 825 Pls
7840 799 Pls
7903 787 Pls
7966 785 Pls
8029 791 Pls
8093 800 Pls
8156 812 Pls
8219 826 Pls
8283 834 Pls
8346 837 Pls
8409 835 Pls
8473 817 Pls
8536 790 Pls
8599 763 Pls
8662 741 Pls
8726 731 Pls
8789 723 Pls
8852 722 Pls
8916 733 Pls
8979 747 Pls
9042 757 Pls
9105 778 Pls
9169 792 Pls
9232 796 Pls
9295 792 Pls
9359 782 Pls
9422 773 Pls
9485 750 Pls
9549 734 Pls
9612 724 Pls
9675 719 Pls
9738 714 Pls
9802 711 Pls
9865 711 Pls
9928 712 Pls
9992 714 Pls
10055 714 Pls
10118 711 Pls
10181 711 Pls
10245 710 Pls
10308 710 Pls
10371 709 Pls
10435 708 Pls
10498 708 Pls
10561 708 Pls
10625 710 Pls
2.000 UL
LTb
LCb setrgbcolor
814 4269 N
814 704 L
10127 0 V
0 3565 V
814 4269 L
Z stroke
1.000 UP
2.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
